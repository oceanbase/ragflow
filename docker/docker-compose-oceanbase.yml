services:
  ragflow:
    depends_on:
      oceanbase:
        condition: service_healthy
    image: ${RAGFLOW_IMAGE}
    # Example configuration to set up an MCP server:
    # command:
    #   - --enable-mcpserver
    #   - --mcp-host=0.0.0.0
    #   - --mcp-port=9382
    #   - --mcp-base-url=http://127.0.0.1:9380
    #   - --mcp-script-path=/ragflow/mcp/server/server.py
    #   - --mcp-mode=self-host
    #   - --mcp-host-api-key=ragflow-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    # Optional transport flags for MCP (customize if needed).
    # Host mode need to combined with --no-transport-streamable-http-enabled flag, namely, host+streamable-http is not supported yet.
    # The following are enabled by default unless explicitly disabled with --no-<flag>.
    #   - --no-transport-sse-enabled # Disable legacy SSE endpoints (/sse and /messages/)
    #   - --no-transport-streamable-http-enabled #  Disable Streamable HTTP transport (/mcp endpoint)
    #   - --no-json-response # Disable JSON response mode in Streamable HTTP transport (instead of SSE over HTTP)
    container_name: ragflow-server
    ports:
      - ${SVR_HTTP_PORT:-9380}:9380
      - ${WEB_HTTP_PORT:-80}:80
      - ${WEB_HTTPS_PORT:-443}:443
    #  - 5678:5678
    #  - 5679:5679
    #  - 9382:9382 # entry for MCP (host_port:docker_port). The docker_port must match the value you set for `mcp-port` above.
    volumes:
      - ./ragflow-logs:/ragflow/logs
      - ./nginx/ragflow.conf:/etc/nginx/conf.d/ragflow.conf
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../history_data_agent:/ragflow/history_data_agent
      - ./service_conf.yaml.template:/ragflow/conf/service_conf.yaml.template
      - ./entrypoint.sh:/ragflow/entrypoint.sh
    env_file: .env.oceanbase
    environment:
      - TZ=${TIMEZONE}
      - HF_ENDPOINT=${HF_ENDPOINT-}
      - MACOS=${MACOS-}
      - MYSQL_HOST=oceanbase
      - MYSQL_PORT=2881
      - MYSQL_USER=root@${OB_TENANT_NAME:-powerrag}
      - MYSQL_PASSWORD=${OB_TENANT_PASSWORD:-123456}
      - MYSQL_DBNAME=${OCEANBASE_META_DBNAME:-ragflow}
      - OCEANBASE_DOC_DBNAME=${OCEANBASE_DOC_DBNAME:-ragflow_doc}
    networks:
      - powerrag-ce
    restart: on-failure
    # https://docs.docker.com/engine/daemon/prometheus/#create-a-prometheus-configuration
    # If you use Docker Desktop, the --add-host flag is optional. This flag ensures that the host's internal IP is exposed to the Prometheus container.
    extra_hosts:
      - "host.docker.internal:host-gateway"
  # executor:
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #   image: ${RAGFLOW_IMAGE}
  #   container_name: ragflow-executor
  #   volumes:
  #     - ./ragflow-logs:/ragflow/logs
  #     - ./nginx/ragflow.conf:/etc/nginx/conf.d/ragflow.conf
  #   env_file: .env
  #   environment:
  #     - TZ=${TIMEZONE}
  #     - HF_ENDPOINT=${HF_ENDPOINT}
  #     - MACOS=${MACOS}
  #   entrypoint: "/ragflow/entrypoint_task_executor.sh 1 3"
  #   networks:
  #     - ragflow
  #   restart: on-failure
  #   # https://docs.docker.com/engine/daemon/prometheus/#create-a-prometheus-configuration
  #   # If you're using Docker Desktop, the --add-host flag is optional. This flag makes sure that the host's internal IP gets exposed to the Prometheus container.
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"

  oceanbase:
    image: oceanbase/oceanbase-ce:4.3.5-lts
    container_name: observer
    ports:
      - ${EXPOSE_OB_PORT:-2881}:2881
    env_file: .env.oceanbase
    environment:
      - OB_CLUSTER_NAME=${OB_CLUSTER_NAME:-powerrag-ce}
      - OB_TENANT_NAME=${OB_TENANT_NAME:-powerrag}
      - OB_SYS_PASSWORD=${OB_SYS_PASSWORD:-123456}
      - OB_TENANT_PASSWORD=${OB_TENANT_PASSWORD:-123456}
      - OB_SERVER_IP=127.0.0.1
    volumes:
      - ./oceanbase/init.d:/root/boot/init.d
      - ./oceanbase/data:/root/ob
      - ./oceanbase/conf:/root/.obd/cluster
    networks:
      - powerrag-ce
    restart: always
    healthcheck:
      test: [ 'CMD-SHELL', 'obclient -h127.0.0.1 -P2881 -uroot@${OB_TENANT_NAME} -p${OB_TENANT_PASSWORD} -e "CREATE DATABASE IF NOT EXISTS ${OCEANBASE_META_DBNAME:-ragflow}; CREATE DATABASE IF NOT EXISTS ${OCEANBASE_DOC_DBNAME:-ragflow_doc};"' ]
      interval: 10s
      retries: 30
      start_period: 30s
      timeout: 10s

networks:
  powerrag-ce:
    driver: bridge
